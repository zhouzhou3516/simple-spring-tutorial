<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <import resource="data-source-and-tx-manager.xml"/>

    <!-- 基于注解的配置啦, 强制使用CGLIb代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 载入我们可爱的template们 -->
    <context:component-scan base-package="com.qunar.campus.spring.tutorial.transaction"/>

    <!--
    这个bean 其实可以和tx-annotation-driven那个标签实现一样的效果
    另外，可以直接@Component,@Resource实例化这个bean.用schema定义只是想你看得更清楚
    -->
    <bean id="transactionalDriven"
          class="com.qunar.campus.spring.tutorial.transaction.aop.impl.TransactionDriver">
        <constructor-arg name="transactionManager" ref="txManager"/>
    </bean>

    <!--
        我们借助AOP,以及TransactionManager轻松实现了和spring类似的@Transactional的功能

        当然，TransactionManager内部是如何实现的呢？
        它的接口是如何定义的呢
        它是如何做到线程安全的呢
        它是如何实现事务的传播属性的呢？
    -->


</beans>